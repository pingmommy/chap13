
일반변수와 Array변수의 차이점

- 일반변수 : 값을 하나만 저장
- Array 변수(배열) : 여러 개의 값을 저장하고 다룰 수 있음 

데이터가 엄청 많아지면 배열로 처리하기 어려워진다. 

많은 양의 데이터를 효율적으로 처리하기 위해 만들어진 라이브러리를 컬렉션라이브러리라고 하고

컬렉션라이브러리에는 다양한 자료구조가 있다. 



JDBC는 인터페이스. 구현클래스는 각 DBMS(DataBaseManagementSystem)마다 다르다.
하지만 JDBC 인터페이스를 구현했기 때문에 클래스의 사용법은 대동소이하다.

List 컬렉션 

객체를 인덱스로 관리 

객체에 인덱스 부여 인덱스로 객체 검색, 삭제 기능 제공 

list도 많은 자료를 다루는 것이기 때문에 데이터베이스를 다루는 sql문처럼 crud 문법에 따라 자료를 처리 
crud를 메소드로 구현 

데이터는 파일시스템에 저장된다면, 컬렉션에서 다루는 데이터들은 메모리에 저장됨. 

콜렉션에서 순서가 있어서 인덱스로 관리가 가능한 자료구조는 List뿐이다. (배열도 가능하다.)    

list컬렉션의 구현클래스는 왜 3개나 되나? 내가 어떤 연산을 하느냐에 따라 연산의 속도가 다르기 때문. 

ArrayList - R,U 빠름.
LinkedList - C D 빠름.


컬렉션 프레임워크

널리 알려진 자료구조를 바탕으로 객체들을 효율적으로 추가, 삭제, 검색할 수 있도록 관련 인터페이스와 클래스들을 포함시켜 놓은  자바 유틸 패키지

주요 인터페이스 : List, Set, Map

인터페이스분류 : List : 인덱스가 있음(순서대로 저장), 중복저장가능 
					구현클래스 : ArrayList, Linked List, Vector
                                                                           list,set의 공통점: 값만 저장한다.  
			  set : 인덱스없음(순서없음) 중복저장 안됨. 
			    	구현클래스 : HashSet, TreeSet
			    	
			    	
			  Map : 저장하는 데이터가 2개다. 값, 값에 해당하는 키 
			        사전과 매커니즘이 유사하다. 
			        
			        특징 >>
			       키는 중복저장할 수 없지만 값은 중복저장할 수 있다. 
			       순서가 없다.(인덱스없음.)
			       
			   *set과 map은 인덱스가 없어서 전통적인 포문으로는 값을 읽을 수 없다. (향상된 포문)   

hashcode()의 값이 new a1과 new a2가 다른 건 알겠는데, (메모리주소가 다르니까)

왜 
(new String("Hello").hashCode());
(new String("Hello").hashCode());


같음(>> 100)
Integer n1 = 100;
Integer n2 = 100;

같음(>>-144729257)
int h1 =Objects.hash(10,"hello",10.5);
int h2 =Objects.hash(10,"hello",10.5);



실습문제 :

1.
캐릭터변수에 랜덤한 값을 넣고 

체크하는 코드를 작성 
있다 : 키를 통해서 체크한다. 값을 체크 , 값을 증가 , 값을 매핑된 키에 넣는다. 
없다 : 그럼 매핑된 키 값에 1을 넣는다. 

2.
맵6을 만든다. 

화면상에 

1,1 이 나온 갯수만큼 다 출력 ㅁ ㅁ ㅁ ㅁ ㅁ ㅁ 

f 			   
			   
			   

할 것!! 
			   
*********************VT100
01.
변수 : line column fg bg ch 
반복문으로 완성 

02.
클래스 내부에서 Alpha클래스를 만들고 main클래스에서 인스턴스를 생성하여
실행하기(main은 반복문, Alpha클래스 안에는 show()가 있어야 한다.)

03.
line20, column 40인 공간에 알파벳이 다 찍히면 반복문을 멈추는 코드 

무한루프 종료시키기 (1-10까지 다 출력되면 무한루프 종료 )



			   
			    
			     			
